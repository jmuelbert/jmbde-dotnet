name: ci

on:
  push:
    branches: [master]
    tags-ignore:
      - "*"
    paths-ignore:
      - "*.md"
      - ".editorconfig"
      - "docs/**"

  pull_request:
    branches: [master]
    tags-ignore:
      - "*"
    paths-ignore:
      - "*.md"
      - ".editorconfig"
      - "docs/**"

  workflow_dispatch:

env:
  CONFIGURATION: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: 1
  DOTNET_SDK_VERSION: 5.0.x
  NET_CORE_VERSION: net5.0
  NET_FRAMEWORK_VERSION: net48

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.5
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.11
        with:
          versionSpec: "5.x"

      - name: Check dotnet sdk install
        run: dotnet --info

      - name: Install dependencies
        run: dotnet restore

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.11

      - name: Display the version
        run: |
          echo "Version: ${{ steps.gitversion.outputs.semVer }}"

      - name: Build solution
        run: |
          dotnet tool update --global dotnet-ef
          dotnet ef database update --project src/jmbde
          dotnet build  -p:Configuration=Release --no-restore -p:version=${{ steps.gitversion.outputs.semVer }}

      - name: Unit & integration test
        run: |
          dotnet tool update --global dotnet-ef
          dotnet ef database update --project src/jmbde
          dotnet test  -p:Configuration=Release --no-restore -p:version=${{ steps.gitversion.outputs.semVer }}

      - name: Generate nuget package
        run: |
          dotnet tool update --global dotnet-ef
          dotnet ef database update --project src/jmbde
          dotnet pack --configuration=Release

      - name: Collect Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nuget-packages
          path: "**/*.nupkg"

      # - name: Publish the package to NuGet.Org
      #  run: dotnet nuget push "**/*.nupkg" -s https://api.nuget.org/v3/index.json -k ${{ secrets.PUBLISH_NUGET_ORG }} --skip-duplicate
